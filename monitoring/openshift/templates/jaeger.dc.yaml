apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jaeger-template
message: |-
  The following service(s) have been created in your project: ${NAME}.
  For more information about using this template, including OpenShift considerations, contact the rocketchat community.
metadata:
  annotations:
    description: MDS Jaeger Template
    tags: monitoring,jaeger
  name: jaeger-template
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the
      server instance.
    required: true
    value: jaeger
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: monitoring
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for
      the application.
    value: empr-mds-tools
  - name: SOURCE_IMAGE_NAME
    displayName: Source Image Name
    description: The name of the image to use for this resource.
    required: true
    value: jaeger
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: prod
  - description: The namespace this templated is deployed into.
    displayName: Namespace
    name: NAMESPACE
    value: empr-mds-prod
  - description: Default route subdomain
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    required: true
    value: pathfinder.gov.bc.ca
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 100m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 100Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
  - description: The name of the Jaeger Service.
    displayName: Jaeger Service Name
    name: JAEGER_SERVICE_NAME
    required: true
    value: jaeger
  - description: The name of the Jaeger Zipkin Service.
    displayName: Jaeger Zipkin Service Name
    name: JAEGER_ZIPKIN_SERVICE_NAME
    required: true
    value: zipkin
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: jaeger
      labels:
        app: ${APP_NAME}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: "${APP_NAME}"
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            name: jaeger
            app: "${APP_NAME}"
        spec:
          containers:
            - image: " "
              name: jaeger-aio
              #args: ["--config-file=/conf/collector.yaml"]
              ports:
                - containerPort: 5775
                  protocol: UDP
                - containerPort: 6831
                  protocol: UDP
                - containerPort: 6832
                  protocol: UDP
                - containerPort: 5778
                  protocol: TCP
                - containerPort: 16686
                  protocol: TCP
                - containerPort: 14268
                  protocol: TCP
                - containerPort: 9411
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 14269
              volumeMounts:
                - name: jaeger-configuration-volume
                  mountPath: /conf
              env:
                - name: COLLECTOR_ZIPKIN_HTTP_PORT
                  value: "9411"
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                name: jaeger-config
                items:
                  - key: collector
                    path: collector.yaml
              name: jaeger-configuration-volume
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - "jaeger-aio"
            from:
              kind: ImageStreamTag
              name: "jaeger-aio:${TAG_NAME}"
              namespace: "${IMAGE_NAMESPACE}"
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: jaeger-collector
      labels:
        app: ${APP_NAME}
    spec:
      ports:
        - name: jaeger-collector-grpc
          port: 14250
          protocol: TCP
          targetPort: 14250
        - name: jaeger-collector-tchannel
          port: 14267
          protocol: TCP
          targetPort: 14267
        - name: jaeger-collector-http
          port: 14268
          protocol: TCP
          targetPort: 14268
        - name: jaeger-collector-zipkin
          port: 9411
          protocol: TCP
          targetPort: 9411
      selector:
        name: jaeger
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: zipkin
      labels:
        app: ${APP_NAME}
    spec:
      ports:
        - name: jaeger-collector-zipkin
          port: 9411
          protocol: TCP
          targetPort: 9411
      selector:
        name: jaeger
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: jaeger-query
      labels:
        app: ${APP_NAME}
    spec:
      ports:
        - name: jaeger-query
          port: 80
          protocol: TCP
          targetPort: 16686
      selector:
        name: jaeger
      type: LoadBalancer
  - apiVersion: v1
    kind: Route
    metadata:
      name: jaeger-query
      labels:
        app: ${APP_NAME}
        jaeger-infra: query-route
    spec:
      tls:
        insecureEdgeTerminationPolicy: Allow
        termination: edge
      to:
        kind: Service
        name: jaeger-query
  - apiVersion: v1
    data:
      nginx-jaeger-config.json: |-
        {
          "service_name": "nginx",
          "sampler": {
            "type": "const",
            "param": 1
          },
          "reporter": {
            "localAgentHostPort": "localhost:6831"
          }
        }
    kind: ConfigMap
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "jaeger-config"

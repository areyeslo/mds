apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jaeger-template
message: |-
  The following service(s) have been created in your project: ${NAME}.
  For more information about using this template, including OpenShift considerations, contact the rocketchat community.
metadata:
  annotations:
    description: MDS Jaeger Template
    tags: monitoring,jaeger
  name: jaeger-template
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the
      server instance.
    required: true
    value: jaeger
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: monitoring
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for
      the application.
    value: empr-mds-tools
  - name: SOURCE_IMAGE_NAME
    displayName: Source Image Name
    description: The name of the image to use for this resource.
    required: true
    value: grafana
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: prod
  - description: The namespace this templated is deployed into.
    displayName: Namespace
    name: NAMESPACE
    value: empr-mds-prod
  - description: The name of the Loki service to connect to.
    displayName: Loki Service Name
    name: LOKI_SERVICE_NAME
    required: true
    value: loki
  - description: The name of the Prometheus service to connect to.
    displayName: Prometheus Service Name
    name: PROMETHEUS_SERVICE_NAME
    required: true
    value: prometheus
  - description: Default route subdomain
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    required: true
    value: pathfinder.gov.bc.ca
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 100m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 100Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
objects:
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: jaeger-collector
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
    spec:
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: jaeger
            app.kubernetes.io/name: jaeger
            app.kubernetes.io/component: collector
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "14268"
        spec:
          containers:
            - image: jaegertracing/jaeger-collector:1.18.1
              name: jaeger-collector
              args: ["--config-file=/conf/collector.yaml"]
              ports:
                - containerPort: 14267
                  protocol: TCP
                - containerPort: 14268
                  protocol: TCP
                - containerPort: 9411
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 14269
              volumeMounts:
                - name: jaeger-configuration-volume
                  mountPath: /conf
              env:
                - name: SPAN_STORAGE_TYPE
                  valueFrom:
                    configMapKeyRef:
                      name: jaeger-configuration
                      key: span-storage-type
          volumes:
            - configMap:
                name: jaeger-configuration
                items:
                  - key: collector
                    path: collector.yaml
              name: jaeger-configuration-volume
  - apiVersion: v1
    kind: Service
    metadata:
      name: jaeger-collector
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
    spec:
      ports:
        - name: jaeger-collector-tchannel
          port: 14267
          protocol: TCP
          targetPort: 14267
        - name: jaeger-collector-http
          port: 14268
          protocol: TCP
          targetPort: 14268
        - name: jaeger-collector-zipkin
          port: 9411
          protocol: TCP
          targetPort: 9411
      selector:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: zipkin
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: zipkin
    spec:
      ports:
        - name: jaeger-collector-zipkin
          port: 9411
          protocol: TCP
          targetPort: 9411
      selector:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
      type: ClusterIP
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: jaeger-query
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: query
    spec:
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: jaeger
            app.kubernetes.io/name: jaeger
            app.kubernetes.io/component: query
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "16686"
        spec:
          containers:
            - image: jaegertracing/jaeger-query:1.18.1
              name: jaeger-query
              args: ["--config-file=/conf/query.yaml"]
              ports:
                - containerPort: 16686
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 16687
              volumeMounts:
                - name: jaeger-configuration-volume
                  mountPath: /conf
              env:
                - name: SPAN_STORAGE_TYPE
                  valueFrom:
                    configMapKeyRef:
                      name: jaeger-configuration
                      key: span-storage-type
          volumes:
            - configMap:
                name: jaeger-configuration
                items:
                  - key: query
                    path: query.yaml
              name: jaeger-configuration-volume
  - apiVersion: v1
    kind: Service
    metadata:
      name: jaeger-query
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: query
    spec:
      ports:
        - name: jaeger-query
          port: 80
          protocol: TCP
          targetPort: 16686
      selector:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: query
      type: LoadBalancer
  - apiVersion: extensions/v1beta1
    kind: DaemonSet
    metadata:
      name: jaeger-agent
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: agent
    spec:
      template:
        metadata:
          labels:
            app: jaeger
            app.kubernetes.io/name: jaeger
            app.kubernetes.io/component: agent
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "5778"
        spec:
          containers:
            - name: jaeger-agent
              image: jaegertracing/jaeger-agent:1.18.1
              args: ["--config-file=/conf/agent.yaml"]
              volumeMounts:
                - name: jaeger-configuration-volume
                  mountPath: /conf
              ports:
                - containerPort: 5775
                  protocol: UDP
                - containerPort: 6831
                  protocol: UDP
                - containerPort: 6832
                  protocol: UDP
                - containerPort: 5778
                  protocol: TCP
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          volumes:
            - configMap:
                name: jaeger-configuration
                items:
                  - key: agent
                    path: agent.yaml
              name: jaeger-configuration-volume

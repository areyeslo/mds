name: Build PR and push to AWS

on:
  pull_request:
    branches:
      - "feature/*"

env:
  IMAGE_URI: ${{ secrets.AWS_ECR_URI }}
  TAG_ENV: pr-${{ github.event.number }}

jobs:
  build-pr:
    name: build-pr
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        include:
          - service: services/core-web
            repo: mds-web
          - service: services/core-api
            repo: mds-api

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.5.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: mds-github-action
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # TODO: seperate real push to avoid half-built release
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ${{ matrix.service }}
          push: true
          tags: ${{ env.IMAGE_URI }}${{ matrix.repo }}:${{ github.sha }}, ${{ env.IMAGE_URI }}${{ matrix.repo }}:${{ env.TAG_ENV }}

      - name: Update service tasks
        if: ${{ success() }}
        run: |
          aws ecs update-service --cluster=mds-cluster --service=${{ matrix.repo }}-service --force-new-deployment

name: Pull Request

on:
  pull_request:
    paths:
      - ".github/workflows/pr.yaml"
      - ".github/workflows/tf-plan.yaml"
      - ".github/workflows/pr-tf-test.yaml"
      - "terraform/**"
      - "services/core-web/**"
      - "!**/README.md"

env:
  #TODO: create a switch for context based on editted service files
  SERVICE_CONTEXT: services/core-web

  IMAGE_URI: ${{ secrets.AWS_ECR_URI }}
  TF_VERSION: 0.14.7
  TG_VERSION: 0.28.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

jobs:
## Trigger on PR
  pr:
    name: pr
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ${{ env.SERVICE_CONTEXT }}
          push: false

      - name: Save PR number
        working-directory: /tmp
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: /tmp/pr/

## Terraform plan on successful PR
  plan:
    needs: pr
    name: terraform-plan
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_sha }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Plan
        id: tg_plan
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          TF_CLI_ARGS: -no-color
          app_image: ${{ env.IMAGE_URI }}:${{ github.head_sha }}
        run: terragrunt run-all plan --terragrunt-non-interactive | tee /tmp/tg_plan
        continue-on-error: true

      - name: Get Terraform Plan Output
        id: plan
        uses: juliangruber/read-file-action@v1
        with:
          path: /tmp/tg_plan

      - name: Terragrunt Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  cd:
    name: cd
    runs-on: ubuntu-20.04
    needs: plan

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_sha }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.head_sha }}
        run: terragrunt apply-all --terragrunt-non-interactive
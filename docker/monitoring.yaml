version: "3"

services:
  ####################### Logging and Monitoring #######################
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-local.yaml
    volumes:
      - ../monitoring/loki/loki-local.yaml:/etc/loki/loki-local.yaml

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ../monitoring/promtail/promtail-local.yaml:/etc/promtail/promtail-local.yaml
      - core_api_logs:/mnt/core-api
      - core_web_logs:/mnt/core-web
    command: -config.file=/etc/promtail/promtail-local.yaml
    expose:
      - 1514

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ../monitoring/prometheus/prometheus-local.yaml:/etc/prometheus/prometheus-local.yaml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus-local.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3010:3000
    volumes:
      - grafana_storage:/var/lib/grafana
      - ../monitoring/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ../monitoring/grafana/env
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:latest
    hostname: "jaeger-collector"
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  ############################# Container metrics ###########################
  # https://github.com/maheshmahadevan/docker-monitoring-windows
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always

  ############################# Exporters ###################################
  # https://github.com/rongfengliang/redis-exporter-prometheus-docker-compose
  # redis_monitoring:
  #   image: oliver006/redis_exporter:latest
  #   container_name: mds_cache_monitoring
  #   command: -redis.addr redis://redis:6379 -redis.password redis-password
  #   restart: always
  #   depends_on:
  #     - redis
  #   ports:
  #     - "9121"
  # # https://github.com/wrouesnel/postgres_exporter
  # postgres_monitoring:
  #   image: wrouesnel/postgres_exporter
  #   container_name: mds_postgres_monitoring
  #   environment:
  #     - DATA_SOURCE_NAME=postgresql://mds:test@postgres:5432/mds?sslmode=disable
  #   restart: always
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "9187"

networks:
  default:
    driver: "bridge"

volumes:
  postgres_data: {}
  prometheus_data: {}
  grafana_storage: {}
  core_api_logs: {}
  core_web_logs: {}
